package additionofpolynomial;

import java.util.Iterator;
import java.util.Map;
import java.util.Comparator;
//多项式加法
/*
* 输入样例：
6 2
5 3
3 12
1 6
0 20
6 2
5 3
2 12
1 6
0 20

输出样例：
4x6+6x5+12x3+12x2+12x+40
*/

import java.util.Scanner;
import java.util.TreeMap;

public class Main {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int count = 2;
		// 下面这个TreeMap实现了降序排列
		Map<Integer, Integer> tree = new TreeMap<Integer, Integer>(new Comparator<Integer>() {
			public int compare(Integer o1, Integer o2) {
				return o2 - o1;
			}
		});
		int first = 0, second = 0;
		String[] s;
		while (count > 0) {
			s = in.nextLine().split(" ");
			if (s.length == 2) {
				first = Integer.parseInt(s[0]);
				if (first == 0) {
					count--;
				}
				second = Integer.parseInt(s[1]);
			} else {
				first = Integer.parseInt(s[0]);
				if (first == 0) {
					count--;
				}
				second = 0;
			}
			if (tree.containsKey(first)) {
				second += tree.get(first);
			}

			tree.put(first, second);

		}
		// 第一种方法
		// 使用entrySet()方法生成一个由Map.entry对象组成的Set,
		// 而Map.entry对象包括了每个元素的"键"和"值".这样就可以用iterator了
		Iterator it = tree.entrySet().iterator();
		String s2 = new String();
		while (it.hasNext()) {
			// entry的输出结果如key0=value0等
			Map.Entry entry = (Map.Entry) it.next();
			Integer key = (Integer) entry.getKey();
			Integer value = (Integer) entry.getValue();
			if (!"0".equals(key.toString())) {
				if (value >= 0) {
					if (!"0".equals(value.toString()) && !"1".equals(key.toString())) {
						s2 += (value.toString() + "x" + key.toString() + "+");
					} else if ("1".equals(key.toString())) {
						s2 += (value.toString() + "x" + "+");
					}
				} else {
					s2 = s2.substring(0, s2.length() - 1);
					if (!"0".equals(value.toString()) && !"1".equals(key.toString())) {

						s2 += (value.toString() + "x" + key.toString() + "+");

					} else if ("1".equals(key.toString())) {
						s2 += (value.toString() + "x" + "+");
					}
				}

			} else {
				s2 += value.toString();
			}
			// System.out.println(entry);
			// System.out.println(key);
			// System.out.println(value);
		}
		System.out.println(s2);
	}

}
